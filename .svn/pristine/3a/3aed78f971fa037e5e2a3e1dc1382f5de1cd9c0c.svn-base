using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
using UnityEngine.SceneManagement;

public class botScript : MonoBehaviour {

    public GameObject plavkiM;
    public GameObject plavkiW;
    public Image plavki_Woomen;
    float plavkiHSV;
    float shapochkaHSV;
    public Image plavki;
    public Image shapochka;
    Animator animator;
    public Rigidbody2D powerFlowing;
    bool why;
    public int myPosition;
    float mySpeed;
    float powerCount;
    int counRace;
    string myName;
    public Text textMyName;
    public Text textPlayer;
    int myRaceDist;
    float myTime;
    TrailRenderer trlRender;
    bool myCour;

    void Awake()
    {
        myRaceDist = 0;
        myTime = 0;
        if(PlayerPrefs.GetInt("pol") == 1)
        {
            myName = Main.surnameBotWoomen[Random.Range(0, Main.surnameBotWoomen.Length)] + " " + Main.namesBotWoomen[Random.Range(0, Main.namesBotWoomen.Length)];
        }
        else myName = Main.surnameBotMan[Random.Range(0, Main.surnameBotMan.Length)] + " " + Main.namesBotMan[Random.Range(0, Main.namesBotMan.Length)];
    }

    void Start () {
        myCour = false;
        shapochkaHSV = (float)Random.Range(0, 1000) / (float)1000;
        plavkiHSV = (float)Random.Range(0, 1000) / (float)1000;
        shapochka.color = Color.HSVToRGB(shapochkaHSV, 0.65f, 1);
        plavki.color = Color.HSVToRGB(plavkiHSV, 0.65f, 1);
        animator = GetComponent<Animator>();
        trlRender = GetComponent<TrailRenderer>();
        animator.SetBool(player_script.anim_stile, true);
        trlRender.enabled = false;
        myRaceDist = player_script.raceDist;
        counRace = 0;
        powerCount = 2;
        mySpeed = Random.Range(400, 700);
        mySpeed = mySpeed / 100;
        Debug.Log(mySpeed);
        why = true;
        if(player_script.xPosition == myPosition)
        {
            transform.localPosition = new Vector3(57, -549, -10);
            textPlayer.text = myName;
        }
        else
        {
            textMyName.text = myName;
        }
        StartCoroutine(strtCour());
        plavki_Woomen.color = Color.HSVToRGB(plavkiHSV, 0.65f, 1);
        plavki.color = Color.HSVToRGB(plavkiHSV, 0.65f, 1);
        if (PlayerPrefs.GetInt("pol") == 1)
        {
            plavkiW.SetActive(true);
            plavkiM.SetActive(false);
        }
        else
        {
            plavkiM.SetActive(true);
            plavkiW.SetActive(false);
        }
    }

	void Update () {
        animator.speed = Mathf.Abs(powerFlowing.velocity.y);
        if (player_script.startOn && why && myCour)
        {
            trlRender.enabled = true;
            StartCoroutine(swim());
            powerFlowing.AddForce(new Vector2(0, powerCount), ForceMode2D.Impulse);
            why = false;
        }
	}

    IEnumerator swim()
    {
        yield return new WaitForSeconds(0.25f);
        powerFlowing.AddForce(new Vector2(0, mySpeed * Time.deltaTime), ForceMode2D.Impulse);
        StartCoroutine(swim());
    }

    IEnumerator strtCour()
    {
        yield return new WaitForSeconds((float)Random.Range(0, 2000) / (float)1000);
        myCour = true;
    }

    void OnTriggerEnter2D(Collider2D col)
    {
        if (col.tag == "TopCollider")
        {
            myRaceDist--;
            transform.Rotate(180, 0, 0);
            counRace++;
            mySpeed = -mySpeed;
            powerFlowing.AddForce(new Vector2(0, -powerCount), ForceMode2D.Impulse);
        }

        if (col.tag == "DownCollider" && counRace > 0)
        {
            myRaceDist--;
            if (myRaceDist <= 0)
            {
                myTime = player_script.raceTime;
                player_script.position++;
                if (player_script.xPosition == myPosition)
                {
                    textPlayer.text = player_script.position + " Место - " + string.Format("{0:0.00}", myTime);
                }
                else
                {
                    textMyName.text = player_script.position + " Место - " + string.Format("{0:0.00}", myTime);
                }
                trlRender.enabled = false;
            }
            else
            {
                counRace++;
                transform.Rotate(180, 0, 0);
                mySpeed = -mySpeed;
                powerFlowing.AddForce(new Vector2(0, powerCount), ForceMode2D.Impulse);
            }
        }
    }
}
